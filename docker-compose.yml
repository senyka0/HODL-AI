version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - '/etc/letsencrypt:/etc/letsencrypt'
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - REACT_APP_POLYGON_RPC=${POLYGON_RPC}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - POLYGON_RPC=${POLYGON_RPC}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-web3dashboard}
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - app-network

  db:
    
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-web3dashboard}
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: